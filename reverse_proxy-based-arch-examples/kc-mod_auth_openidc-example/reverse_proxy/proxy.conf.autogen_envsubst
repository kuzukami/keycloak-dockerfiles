########################################################################################
#
# Common Settings
#
########################################################################################

# バーチャルホスト設定
#NameVirtualHost *:80

# keepAlive設定
KeepAlive On

# PD[mod_auth_openidc] OpenID Connectのレスポンスタイプ設定(code = Authorization Code Grant) [code]
OIDCResponseType ${OIDCResponseType}
#${OIDCResponseType}

# PD[mod_auth_openidc] Cookieやキャッシュの暗号化で使用されるパスフレーズの設定 [password]
OIDCCryptoPassphrase ${OIDCCryptoPassphrase}

# PD[mod_auth_openidc] RP(mod_auth_openidc)のセッションクッキーが設定されるドメインの設定 [sso.example.com]
OIDCCookieDomain ${OIDCCookieDomain}

# PD[mod_auth_openidc] OP(Keycloak)との通信時にSSLを使用する際の、有効なサーバー証明書チェック有無の設定 [Off]
OIDCSSLValidateServer ${OIDCSSLValidateServer}
#${OIDCSSLValidateServer}

# PD[mod_auth_openidc] OP(Keycloak)のメタデータURLの設定 [${OIDCProviderMetadataURL}]
OIDCProviderMetadataURL ${OIDCProviderMetadataURL}

# PD[mod_auth_openidc] IDTokenのアプリケーションへの渡し方 [${OIDCPassIDTokenAs}]
OIDCPassIDTokenAs ${OIDCPassIDTokenAs}

# PD[mod_auth_openidc] クレームの連携方法の設定 [headers]
OIDCPassClaimsAs ${OIDCPassClaimsAs}
#${OIDCPassClaimsAs}

#x PD[mod_auth_openidc] クレームのプレフィックスの設定 空文字がデフォルト
#OIDCClaimPrefix ""


# PD[httpd/alb] header 許容サイズの拡大=albmax cookieでのtoken保持能力を上げるため。 [${LimitRequestFieldSize}]
LimitRequestFieldSize ${LimitRequestFieldSize}

# PD[httpd] httpd のアクセスログフォーマット定義["receipttime:%{%F %T %z}t\tforwardedfor:%{X-Forwarded-For}i\tforwardedhost:%{X-Forwarded-Host}i\tforwardedproto:%{X-Forwarded-Proto}i\thost:%h\tuser:%u\treq:%r\tstatus:%>s\tmethod:%m\tpath:%U%q\tsize:%B\treferer:%{Referer}i\tua:%{User-Agent}i\treqtime_microsec:%D\tcache:%{X-Cache}o\truntime:%{X-Runtime}o\tvhost:%{Host}i\tKC__AUTH_SESSION_ID:%{AUTH_SESSION_ID}C\trelayserverip:%A\tcookie:%{cookie}i\tset_cookie:%{Set-Cookie}o\tOIDC_CLAIM_username:%{OIDC_CLAIM_username}e" ltsv_combinedio]
LogFormat ${LogFormat}
# PD[httpd] httpd のアクセスログファイルとフォーマット ["logs/access_log" ltsv_combinedio]
CustomLog ${CustomLog}


# PD[httpd] DumpIOInputの設定 デバッグ用 [Off]
DumpIOInput ${DumpIOInput}
# PD[httpd] DumpIOOutputの設定 デバッグ用 [Off]
DumpIOOutput ${DumpIOOutput}

# PD[httpd] httpd のログレベル [warn]
LogLevel ${LogLevel}


########################################################################################
#
# Default Site Settings
#
########################################################################################
<VirtualHost *:80>
    # PX ServerNameForUnknownHostAccess=${ServerNameForUnknownHostAccess} [httpd] 間違ったURLでアクセスされた際に利用される仮想サーバ名 目的:特に意味はない [${ServerNameForUnknownHostAccess}]
    ServerName    ${ServerNameForUnknownHostAccess}
    RewriteEngine On
    RewriteOptions inherit

    # 想定ドメイン以外から接続があった場合は403を返す。
    RewriteRule ^/.* / [R=403,L]

</VirtualHost>


# ########################################################################################
# #
# # SSO Site Settings
# #
# ########################################################################################
# <VirtualHost *:80>
#     ServerName    sso.example.com
#     RewriteEngine On
#     RewriteOptions inherit

#     # プロキシパス設定(-> opコンテナ)
#     # Keycloakの認証処理は、アプリケーション内で完結するため、リバプロのみ行う。
#     ProxyPass        / http://host.docker.internal:8080/
#     ProxyPassReverse / http://host.docker.internal:8080/

# </VirtualHost>
########################################################################################
#
# APP1 Site Settings
#
# 認証必要コンテンツ:
#   https://app1.example.com/
# 管理者ロール必要コンテンツ:
#   https://app1.example.com/admin/
# 認証不要コンテンツ:
#   https://app1.example.com/no_auth/
# ログアウト:
#   ${OIDCRedirectURI}?logout=https://app1.example.com/
#
########################################################################################
<VirtualHost *:80>
    # PD[httpd/revprox] openidのリバースプロクシURL 目的:実際にリクエストを受けるURL [sso.example.com]
    ServerName    ${ServerName}

    # PD[httpd/revprox/alb] ALBはX-Forwarded-Host以外のPort,Proto,Forのプロキシヘッダつけ、Hostを付けない。中途半端。既に存在する。X-Forwarded-*の上書き、追加を防ぐ [Off]
    ProxyAddHeaders ${ProxyAddHeaders}

    # PD[httpd/revprox/alb] ALBは、X-Forwarded-Hostを追加してくれない。(20200217) [set X-Forwarded-Host sso.example.com]
    RequestHeader ${RequestHeader}

    RewriteEngine On
    RewriteOptions inherit

    # see https://httpd.apache.org/docs/2.4/ja/mod/mod_log_config.html
    # see http://ltsv.org/
    # see http://y-ken.hatenablog.com/entry/apache-tips-ltsv-access-log
    # see https://linuxjm.osdn.jp/html/LDP_man-pages/man3/strftime.3.html


    # PD[httpd/revprox] プロキシパス設定(-> app1コンテナ) [/ http://host.docker.internal:8083/]
    ProxyPass        ${ProxyPass}
    ProxyPassReverse ${ProxyPass}



    # PD[mod_auth_openidc] リダイレクトURIの設定  目的: 自前側のTokenの受け口(RP一致要求) [https://sso.example.com/oidc-redirect/]
    OIDCRedirectURI  ${OIDCRedirectURI}

    # PD[mod_auth_openidc] OP(Keycloak)に設定されているクライアントIDの設定(RP一致要求) [demo-app1]
    OIDCClientID ${OIDCClientID}

    # PD[mod_auth_openidc] OP(Keycloak)に設定されているクライアントIDに対応するクライアントsecretの設定(RP一致要求) [secret]
    OIDCClientSecret ${OIDCClientSecret}

    # PD[mod_auth_openidc] ReverseProxyで一度認証されたブラウザの認証状態の保持期間 365*24*3600=31,536,000 [${OIDCSessionInactivityTimeout}]
    OIDCSessionInactivityTimeout ${OIDCSessionInactivityTimeout}
    # PD[mod_auth_openidc] idtokenの有効期間 0の設定で問題なし。 '0' means 'the lifetime of session is equal to the one of idtoken' [0]
    OIDCSessionMaxDuration ${OIDCSessionMaxDuration}
    # PD[mod_auth_openidc] idtoken情報をどこに保存するか [${OIDCSessionType}]
    OIDCSessionType ${OIDCSessionType}

    # PD[mod_auth_openidc] cookieが4kに収まらない場合にどの大きさでデータを切断するか？パスとか、expire等の付加情報が載ったうえで4kに収まらないとブラウザ互換性がなくなる [${OIDCSessionCookieChunkSize}]
    OIDCSessionCookieChunkSize ${OIDCSessionCookieChunkSize}

    # Indicates whether the refresh token will be passed to the application in a header/environment variable, according
    # to the OIDCPassClaimsAs directive.
    # Can be configured on a per Directory/Location basis. The default is "Off". 

    # PD[mod_auth_openidc] 【セキュリティ注意】RefreshTokenをアプリ側に渡すか否か。本プログラムでは、logのために渡すのみ。RefreshTokenの流出が発生すると、全ての発行済みTokenを無効にしないとリカバリー出来ない。[On]
    OIDCPassRefreshToken ${OIDCPassRefreshToken}

    # Define the cookie name for the session cookie.
    # When not defined the default is "${OIDCCookie}".
    #OIDCCookie <cookie-name>

    # PD[mod_auth_openidc] tokenもしくは、tokenのキャッシュIDを保存しているcookieの名前 [${OIDCCookie}]
    OIDCCookie ${OIDCCookie}
    # XX[mod_auth_openidc] バックエンド側に渡さないクッキーの一覧
    OIDCStripCookies ${OIDCCookie} ${OIDCCookie}_chunks ${OIDCCookie}_0 ${OIDCCookie}_1 ${OIDCCookie}_2 ${OIDCCookie}_3 ${OIDCCookie}_4 ${OIDCCookie}_5 ${OIDCCookie}_6

#    OIDCSessionType server-cache:persistent

    # 認証ロケーション設定(/)
    # 一旦、"/"以降を全て認証対象とし、対象から外す場合は、以下に別途記載する。
    <Location />
        AuthType openid-connect
        Require valid-user
    </Location>

#    # 非認証ロケーション設定(/no_auth/)
#    <Location /no_auth/>
#        Require all granted
#    </Location>

#    # 制限ロケーション設定(/admin/)
#    # roleにapp1.adminが設定されているユーザのみがアクセス可能
#    <Location /admin/>
#        AuthType openid-connect
#        Require claim "role:app1.admin"
#    </Location>

    # favicon.ico対策
    <Location /favicon.ico>
        Require all granted
    </Location>

</VirtualHost>


########################################################################################
#
# APP2 Site Settings
#
# 認証必要コンテンツ:
#   https://app2.example.com/
# 管理者ロール必要コンテンツ:
#   https://app2.example.com/admin/
# 認証不要コンテンツ:
#   https://app2.example.com/no_auth/
# ログアウト:
#   https://app2.example.com/oidc-redirect/?logout=https://app2.example.com/
#
########################################################################################
# <VirtualHost *:80>
#     ServerName    app2.example.com
#     RewriteEngine On
#     RewriteOptions inherit

#     # プロキシパス設定(-> app2コンテナ)
#     ProxyPass        / http://host.docker.internal:8082/
#     ProxyPassReverse / http://host.docker.internal:8082/

#     # [mod_auth_openidc] リダイレクトURIの設定
#     OIDCRedirectURI  https://app2.example.com/oidc-redirect/

#     # [mod_auth_openidc] OP(Keycloak)に設定されているクライアントIDの設定
#     OIDCClientID demo-app2

#     # [mod_auth_openidc] OP(Keycloak)に設定されているクライアントIDに対応するクライアントsecretの設定
#     OIDCClientSecret **********

#     # 認証ロケーション設定(/)
#     # 一旦、"/"以降を全て認証対象とし、対象から外す場合は、以下に別途記載する。
#     <Location />
#         AuthType openid-connect
#         Require valid-user
#     </Location>

#     # 非認証ロケーション設定(/no_auth/)
#     <Location /no_auth/>
#         Require all granted
#     </Location>

#     # 制限ロケーション設定(/admin/)
#     # roleにapp2.adminが設定されているユーザのみがアクセス可能
#     <Location /admin/>
#         AuthType openid-connect
#         Require claim "role:app2.admin"
#     </Location>

#     # favicon.ico対策
#     <Location /favicon.ico>
#         Require all granted
#     </Location>

# </VirtualHost>

