#see https://docs.docker.com/compose/env-file/
#Purpose: [mod_auth_openidc] OpenID Connectのレスポンスタイプ設定(code = Authorization Code Grant) 
#ReplaceTag: OIDCResponseType.code
OIDCResponseType=code
#Purpose: [mod_auth_openidc] Cookieやキャッシュの暗号化で使用されるパスフレーズの設定 
#ReplaceTag: OIDCCryptoPassphrase.password
OIDCCryptoPassphrase=password
#Purpose: [mod_auth_openidc] RP(mod_auth_openidc)のセッションクッキーが設定されるドメインの設定 
#ReplaceTag: OIDCCookieDomain.example.com
OIDCCookieDomain=sso.example.com
#Purpose: [mod_auth_openidc] OP(Keycloak)との通信時にSSLを使用する際の、有効なサーバー証明書チェック有無の設定 
#ReplaceTag: OIDCSSLValidateServer.Off
OIDCSSLValidateServer=Off
#Purpose: [mod_auth_openidc] OP(Keycloak)のメタデータURLの設定 
#ReplaceTag: https://sso.example.com/auth/realms/demo/.well-known/openid-configuration
OIDCProviderMetadataURL=https://sso.example.com/auth/realms/demo/.well-known/openid-configuration
#Purpose: [mod_auth_openidc] クレームの連携方法の設定 
#ReplaceTag: OIDCPassClaimsAs.headers
OIDCPassClaimsAs=headers
#Purpose: [httpd/alb] header 許容サイズの拡大=albmax cookieでのtoken保持能力を上げるため。 
#ReplaceTag: 64000
LimitRequestFieldSize=64000
#Purpose: [httpd] httpd のアクセスログフォーマット定義
#ReplaceTag: @LOGFORMAT@ ltsv_combinedio
LogFormat="receipttime:%{%F %T %z}t\tforwardedfor:%{X-Forwarded-For}i\tforwardedhost:%{X-Forwarded-Host}i\tforwardedproto:%{X-Forwarded-Proto}i\thost:%h\tuser:%u\treq:%r\tstatus:%>s\tmethod:%m\tpath:%U%q\tsize:%B\treferer:%{Referer}i\tua:%{User-Agent}i\treqtime_microsec:%D\tcache:%{X-Cache}o\truntime:%{X-Runtime}o\tvhost:%{Host}i\tKC__AUTH_SESSION_ID:%{AUTH_SESSION_ID}C\trelayserverip:%A\tcookie:%{cookie}i\tset_cookie:%{Set-Cookie}o\tOIDC_CLAIM_username:%{OIDC_CLAIM_username}e" ltsv_combinedio
#Purpose: [httpd] httpd のアクセスログファイルとフォーマット 
#ReplaceTag: @LOGFILE@ ltsv_combinedio
CustomLog="logs/access_log" ltsv_combinedio
#Purpose: [httpd] DumpIOInputの設定 デバッグ用 
#ReplaceTag: DumpIOInput.On
DumpIOInput=Off
#Purpose: [httpd] DumpIOOutputの設定 デバッグ用 
#ReplaceTag: DumpIOInput.Off
DumpIOOutput=Off
#Purpose: [httpd] httpd のログレベル 
#ReplaceTag: debug dumpio:trace7
LogLevel=warn
#Purpose: [httpd/revprox] openidのリバースプロクシURL 目的:実際にリクエストを受けるURL 
#ReplaceTag: ServerName.app1.example.com
ServerName=sso.example.com
#Purpose: [httpd/revprox/alb] ALBはX-Forwarded-Host以外のPort,Proto,Forのプロキシヘッダつけ、Hostを付けない。中途半端。既に存在する。X-Forwarded-*の上書き、追加を防ぐ 
#ReplaceTag: ProxyAddHeader.Off
ProxyAddHeaders=Off
#Purpose: [httpd/revprox/alb] ALBは、X-Forwarded-Hostを追加してくれない。(20200217) 
#ReplaceTag: set X-Forwarded-Host XerverName.app1.example.com
RequestHeader=set X-Forwarded-Host sso.example.com
#Purpose: [httpd/revprox] プロキシパス設定(-> app1コンテナ) 
#ReplaceTag: / http://host.docker.internal:8081/
ProxyPass=/ http://host.docker.internal:8083/
#Purpose: [mod_auth_openidc] リダイレクトURIの設定  目的: 自前側のTokenの受け口(RP一致要求) 
#ReplaceTag: https://app1.example.com/oidc-redirect/
OIDCRedirectURI=https://sso.example.com/oidc-redirect/
#Purpose: [mod_auth_openidc] OP(Keycloak)に設定されているクライアントIDの設定(RP一致要求) 
#ReplaceTag: OIDCClientID.demo-app1
OIDCClientID=demo-app1
#Purpose: [mod_auth_openidc] OP(Keycloak)に設定されているクライアントIDに対応するクライアントsecretの設定(RP一致要求) 
#ReplaceTag: OIDCClientSecret.secret
OIDCClientSecret=secret
#Purpose: [mod_auth_openidc] ReverseProxyで一度認証されたブラウザの認証状態の保持期間 365*24*3600=31,536,000 
#ReplaceTag: 31536000
OIDCSessionInactivityTimeout=31536000
#Purpose: [mod_auth_openidc] idtokenの有効期間 0の設定で問題なし。 '0' means 'the lifetime of session is equal to the one of idtoken' 
#ReplaceTag: 15432
OIDCSessionMaxDuration=0
#Purpose: [mod_auth_openidc] idtoken情報をどこに保存するか 
#ReplaceTag: client-cookie:persistent
OIDCSessionType=client-cookie:persistent
#Purpose: [mod_auth_openidc] cookieが4kに収まらない場合にどの大きさでデータを切断するか？パスとか、expire等の付加情報が載ったうえで4kに収まらないとブラウザ互換性がなくなる 
#ReplaceTag: 3900
OIDCSessionCookieChunkSize=3900
#Purpose: [mod_auth_openidc] 【セキュリティ注意】RefreshTokenをアプリ側に渡すか否か。本プログラムでは、logのために渡すのみ。RefreshTokenの流出が発生すると、全ての発行済みTokenを無効にしないとリカバリー出来ない。
#ReplaceTag: OIDCPassRefreshToken.On
OIDCPassRefreshToken=On
#Purpose: [mod_auth_openidc] tokenもしくは、tokenのキャッシュIDを保存しているcookieの名前 
#ReplaceTag: mod_auth_openidc_session
OIDCCookie=mod_auth_openidc_session
#Purpose: [httpd] 間違ったURLでアクセスされた際に利用される仮想サーバ名 目的:特に意味はない 
#ReplaceTag: dummy.example.com
ServerNameForUnknownHostAccess=dummy.example.com
